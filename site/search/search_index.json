{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/","text":"MQTT 1.M&Q \u200b M = \u6d88\u606f \u200b Q = \u961f\u5217 2.MQTT Active MQ \u200b Active MQ = \u4e00\u4e2a\u6d88\u606f\u961f\u5217\u5e94\u7528\u670d\u52a1\u5668\uff08\u63a8\u9001\u670d\u52a1\u5668\uff09 Producer\uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff0c\u8d1f\u8d23\u4ea7\u751f\u548c\u53d1\u9001\u6d88\u606f\u5230 Broker\uff1b Broker\uff1a\u6d88\u606f\u5904\u7406\u4e2d\u5fc3\u3002\u8d1f\u8d23\u6d88\u606f\u5b58\u50a8\u3001\u786e\u8ba4\u3001\u91cd\u8bd5\u7b49\uff0c\u4e00\u822c\u5176\u4e2d\u4f1a\u5305\u542b\u591a\u4e2a queue\uff1b Consumer\uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff0c\u8d1f\u8d23\u4ece Broker \u4e2d\u83b7\u53d6\u6d88\u606f\uff0c\u5e76\u8fdb\u884c\u76f8\u5e94\u5904\u7406\uff1b ActiveMQ\u80fd\u505a\u4ec0\u4e48 1.\u5b9e\u73b0\u4e24\u4e2a\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u7684\u901a\u8baf 2.\u5b9e\u73b0\u540c\u4e00\u4e2a\u5e94\u7528\uff0c\u4e0d\u540c\u6a21\u5757\u4e4b\u95f4\u7684\u6d88\u606f\u901a\u8baf ActiveMQ\u7279\u70b9 1.\u652f\u6301\u591a\u8bed\u8a00\uff08Java,C,C++,C#,Ruby,Perl,Python,PHP\uff09\u591a\u534f\u8bae\u5ba2\u6237\u7aef\uff08OpenWire, Stomp REST, WS Notification, XMPP, AMQP\uff09 2.\u5bf9Spring\u7684\u652f\u6301\uff0cActiveMQ\u53ef\u4ee5\u5f88\u5bb9\u6613\u6574\u5408\u5230Spring\u7684\u7cfb\u7edf\u91cc\u9762\u53bb\u3002 3.\u652f\u6301\u9ad8\u53ef\u7528\u3001\u9ad8\u6027\u80fd\u7684\u96c6\u7fa4\u6a21\u5f0f\u3002 Zeno MQ ZMQ\u7b80\u4ecb\uff1aZMQ\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u5d4c\u5165\u5f0f\u7f51\u7edc\u8fde\u63a5\u5e93\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5e76\u53d1\u6846\u67b6\u3002\u6846\u67b6\u63d0\u4f9b\u7684\u5957\u63a5\u5b57\u53ef\u4ee5\u6ee1\u8db3\u5728\u591a\u79cd\u534f\u8bae\u4e4b\u95f4\u4f20\u8f93\u539f\u5b50\u4fe1\u606f\uff0c\u5982\u7ebf\u7a0b\u95f4\u3001\u8fdb\u7a0b\u95f4\u3001TCP\u3001\u5e7f\u64ad\u7b49\u3002\u53ef\u4ee5\u4f7f\u7528ZMQ\u6784\u5efa\u591a\u5bf9\u591a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u5982\u6247\u51fa\u3001\u53d1\u5e03-\u8ba2\u9605\u3001\u4efb\u52a1\u5206\u53d1\u3001\u8bf7\u6c42-\u5e94\u7b54\u7b49\u3002ZMQ\u7684\u9ad8\u901f\u4f7f\u5f97\u5b83\u80fd\u80dc\u4efb\u5206\u5e03\u5f0f\u5e94\u7528\u3002\u5b83\u7684\u5f02\u6b65I/O\u673a\u5236\u8ba9\u4f60\u80fd\u591f\u6784\u5efa\u591a\u6838\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b8c\u6210\u5f02\u6b65\u6d88\u606f\u5904\u7406\u4efb\u52a1\u3002ZMQ\u6709\u7740\u591a\u8bed\u8a00\u652f\u6301\uff0c\u5e76\u80fd\u5728\u51e0\u4e4e\u6240\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 \u200b \u4e09\u79cd\u57fa\u672c\u6a21\u578b \u200b Request-Reply\uff08\u8bf7\u6c42-\u56de\u590d\uff09\u8bf7\u6c42\u5e94\u7b54\u6a21\u5f0f \u200b \u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u7b49\u5f85\u670d\u52a1\u7aef\u56de\u5e94\u8bf7\u6c42\u3002\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u7b80\u5355\u7684 \u201cHello\u201d\uff0c\u670d\u52a1\u7aef\u5219\u56de\u5e94\u4e00\u4e2a \u201cWorld\u201d\u3002\u53ef\u4ee5\u6709 N \u4e2a\u5ba2\u6237\u7aef\uff0c\u4e00\u4e2a\u670d\u52a1\u7aef\uff0c\u56e0\u6b64\u662f 1-N \u8fde\u63a5\u3002 \u200b \u200b Publish-Subscribe \u53d1\u5e03-\u8ba2\u9605\u6a21\u5f0f \u200b \u4e00\u4e2a\u5929\u6c14\u9884\u62a5\u7684\u4f8b\u5b50\u6765\u4ecb\u7ecd\u8be5\u6a21\u5f0f\u3002\u670d\u52a1\u7aef\u4e0d\u65ad\u5730\u66f4\u65b0\u5404\u4e2a\u57ce\u5e02\u7684\u5929\u6c14\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8ba2\u9605\u81ea\u5df1\u611f\u5174\u8da3\uff08\u901a\u8fc7\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff09\u7684\u57ce\u5e02\u7684\u5929\u6c14\u4fe1\u606f\u3002 \u200b \u200b Parallel Pipeline \u5206\u5e03\u5f0f\u5904\u7406 \u4efb\u52a1\u5206\u53d1\u5668\u4f1a\u751f\u6210\u5927\u91cf\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\u7684\u4efb\u52a1\uff1b \u6709\u4e00\u7ec4worker\u4f1a\u5904\u7406\u8fd9\u4e9b\u4efb\u52a1\uff1b \u7ed3\u679c\u6536\u96c6\u5668\u4f1a\u5728\u672b\u7aef\u63a5\u6536\u6240\u6709worker\u7684\u5904\u7406\u7ed3\u679c\uff0c\u8fdb\u884c\u6c47\u603b\u3002 MQTT MQTT\uff08Message Queuing Telemetry Transport\uff0c\u6d88\u606f\u961f\u5217\u9065\u6d4b\u4f20\u8f93\u534f\u8bae\uff09\uff0c\u662f\u4e00\u79cd\u57fa\u4e8e\u53d1\u5e03/\u8ba2\u9605\uff08publish/subscribe\uff09\u6a21\u5f0f\u7684\u201c\u8f7b\u91cf\u7ea7\u201d\u901a\u8baf\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u6784\u5efa\u4e8eTCP/IP\u534f\u8bae\u4e0a\uff0c\u7531IBM\u57281999\u5e74\u53d1\u5e03\u3002 MQTT\u6700\u5927\u4f18\u70b9\u5728\u4e8e\uff0c\u7528\u6781\u5c11\u7684\u4ee3\u7801\u548c\u6709\u9650\u7684\u5e26\u5bbd\uff0c\u4e3a\u8fde\u63a5\u8fdc\u7a0b\u8bbe\u5907\u63d0\u4f9b\u5b9e\u65f6\u53ef\u9760\u7684\u6d88\u606f\u670d\u52a1\u3002 \u4f5c\u4e3a\u4e00\u79cd\u4f4e\u5f00\u9500\u3001\u4f4e\u5e26\u5bbd\u5360\u7528\u7684\u5373\u65f6\u901a\u8baf\u534f\u8bae\uff0c\u4f7f\u5176\u5728\u7269\u8054\u7f51\u3001\u5c0f\u578b\u8bbe\u5907\u3001\u79fb\u52a8\u5e94\u7528\u7b49\u65b9\u9762\u6709\u8f83\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 MQTT\u534f\u8bae\u7279\u70b9 MQTT\u662f\u4e00\u4e2a\u57fa\u4e8e\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u7684\u6d88\u606f\u53d1\u5e03/\u8ba2\u9605\u4f20\u8f93\u534f\u8bae\u3002 MQTT\u534f\u8bae\u662f\u8f7b\u91cf\u3001\u7b80\u5355\u3001\u5f00\u653e\u548c\u6613\u4e8e\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u7279\u70b9\u4f7f\u5b83\u9002\u7528\u8303\u56f4\u975e\u5e38\u5e7f\u6cdb\u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5305\u62ec\u53d7\u9650\u7684\u73af\u5883\u4e2d\uff0c\u5982\uff1a\u673a\u5668\u4e0e\u673a\u5668\uff08M2M\uff09\u901a\u4fe1\u548c\u7269\u8054\u7f51\uff08IoT\uff09\u3002 MQTT \u4e0e HTTP \u4e00\u6837\uff0cMQTT \u8fd0\u884c\u5728\u4f20\u8f93\u63a7\u5236\u534f\u8bae/\u4e92\u8054\u7f51\u534f\u8bae (TCP/IP) \u5806\u6808\u4e4b\u4e0a\u3002 MQTT\u4f7f\u7528\u7684\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u5bf9\u591a\u7684\u6d88\u606f\u5206\u53d1\u673a\u5236\uff0c\u4ece\u800c\u5b9e\u73b0\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u89e3\u8026\u3002\u8fd9\u662f\u4e00\u79cd\u6d88\u606f\u4f20\u9012\u6a21\u5f0f\uff0c\u6d88\u606f\u4e0d\u662f\u76f4\u63a5\u4ece\u53d1\u9001\u5668\u53d1\u9001\u5230\u63a5\u6536\u5668\uff08\u5373\u70b9\u5bf9\u70b9\uff09\uff0c\u800c\u662f\u7531MQTT server\uff08\u6216\u79f0\u4e3a MQTT Broker\uff09\u5206\u53d1\u7684\u3002 MQTT \u670d\u52a1\u5668\u662f\u53d1\u5e03-\u8ba2\u9605\u67b6\u6784\u7684\u6838\u5fc3\u3002 QoS\uff08Quality of Service levels\uff09 QoS 0 \u8fd9\u4e00\u7ea7\u522b\u4f1a\u53d1\u751f\u6d88\u606f\u4e22\u5931\u6216\u91cd\u590d\uff0c\u6d88\u606f\u53d1\u5e03\u4f9d\u8d56\u4e8e\u5e95\u5c42TCP/IP\u7f51\u7edc\u3002\u5373\uff1a<=1 QoS 1 \u627f\u8bfa\u6d88\u606f\u5c06\u81f3\u5c11\u4f20\u9001\u4e00\u6b21\u7ed9\u8ba2\u9605\u8005\u3002 QoS 2 \u4f7f\u7528 QoS 2\uff0c\u6211\u4eec\u4fdd\u8bc1\u6d88\u606f\u4ec5\u4f20\u9001\u5230\u76ee\u7684\u5730\u4e00\u6b21\u3002\u4e3a\u6b64\uff0c\u5e26\u6709\u552f\u4e00\u6d88\u606f ID \u7684\u6d88\u606f\u4f1a\u5b58\u50a8\u4e24\u6b21\uff0c\u9996\u5148\u6765\u81ea\u53d1\u9001\u8005\uff0c\u7136\u540e\u662f\u63a5\u6536\u8005\u3002QoS \u7ea7\u522b 2 \u5728\u7f51\u7edc\u4e2d\u5177\u6709\u6700\u9ad8\u7684\u5f00\u9500\uff0c\u56e0\u4e3a\u5728\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u9700\u8981\u4e24\u4e2a\u6d41\u3002 MQTT \u6570\u636e\u5305\u7ed3\u6784 \u56fa\u5b9a\u5934\uff08Fixed header\uff09\uff0c\u5b58\u5728\u4e8e\u6240\u6709MQTT\u6570\u636e\u5305\u4e2d\uff0c\u8868\u793a\u6570\u636e\u5305\u7c7b\u578b\u53ca\u6570\u636e\u5305\u7684\u5206\u7ec4\u7c7b\u6807\u8bc6\uff1b \u53ef\u53d8\u5934\uff08Variable header\uff09\uff0c\u5b58\u5728\u4e8e\u90e8\u5206MQTT\u6570\u636e\u5305\u4e2d\uff0c\u6570\u636e\u5305\u7c7b\u578b\u51b3\u5b9a\u4e86\u53ef\u53d8\u5934\u662f\u5426\u5b58\u5728\u53ca\u5176\u5177\u4f53\u5185\u5bb9\uff1b \u6d88\u606f\u4f53\uff08Payload\uff09\uff0c\u5b58\u5728\u4e8e\u90e8\u5206MQTT\u6570\u636e\u5305\u4e2d\uff0c\u8868\u793a\u5ba2\u6237\u7aef\u6536\u5230\u7684\u5177\u4f53\u5185\u5bb9\uff1b \u534f\u8bae\u7248\u672c3\u5b9a\u4e49\u4e8614\u79cd MQTT \u62a5\u6587\uff0c\u7528\u4e8e\u5efa\u7acb/\u65ad\u5f00\u8fde\u63a5\u3001\u53d1\u5e03\u6d88\u606f\u3001\u8ba2\u9605\u6d88\u606f\u548c\u7ef4\u62a4\u8fde\u63a5\u3002\u56fa\u5b9a\u62a5\u5934\u7684\u7b2c\u4e00\u5b57\u8282\u76844-7\u4f4d\u7684\u503c\u6307\u5b9a\u4e86\u62a5\u6587\u7c7b\u578b\uff0c\u5176\u53d6\u503c\u5982\u4e0b\u8868\u3002 \u62a5\u6587\u7c7b\u578b \u503c \u63cf\u8ff0 CONNECT 1 \u5ba2\u6237\u7aef\u5411\u4ee3\u7406\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42 CONNACK 2 \u8fde\u63a5\u786e\u8ba4 PUBLISH 3 \u53d1\u5e03\u6d88\u606f PUBACK 4 \u53d1\u5e03\u786e\u8ba4 PUBREC 5 \u53d1\u5e03\u6536\u5230\uff08QoS2\uff09 PUBREL 6 \u53d1\u5e03\u91ca\u653e\uff08QoS2\uff09 PUBCOMP 7 \u53d1\u5e03\u5b8c\u6210\uff08QoS2\uff09 SUBSCRIBE 8 \u5ba2\u6237\u7aef\u5411\u4ee3\u7406\u53d1\u8d77\u8ba2\u9605\u8bf7\u6c42 SUBACK 9 \u8ba2\u9605\u786e\u8ba4 UNSUBSCRIBE 10 \u53d6\u6d88\u8ba2\u9605 UNSUBACK 11 \u53d6\u6d88\u8ba2\u9605\u786e\u8ba4 PINGREQ 12 PING\u8bf7\u6c42 PINGRESP 13 PING\u54cd\u5e94 DISCONNECT 14 \u65ad\u5f00\u8fde\u63a5 3.MQTT\u6a21\u578b 4.python MQTT\u4f7f\u7528 \u76ee\u524d\u4f7f\u7528\u7684\u662femqx \u52a0 paho.mqtt emqx\u5b98\u7f51\uff1ahttps://www.emqx.io/zh/downloads#broker \u7528emqx\u5728windows\u4e0a\u5efa\u7acb\u670d\u52a1\u5668\uff0c\u5148\u4e0b\u8f7d\u9002\u5408\u7684\u5b89\u88c5\u5305\uff0c\u89e3\u538b\u540e\u8fdb\u5165bin\u76ee\u5f55\uff0c\u5728cmd\u4e2d\u4f7f\u7528\u547d\u4ee4 emqx.cmd start\u542f\u52a8\u670d\u52a1\u5668\uff0c\u5173\u95ed\u670d\u52a1\u5668\u7684\u547d\u4ee4\u662femqx.cmd stop\u3002 \u542f\u52a8\u670d\u52a1\u5668\u540e\uff0c\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:18083 \uff0c\u4f7f\u7528\u9ed8\u8ba4\u7ba1\u7406\u8d26\u53f7 admin/public \u5373\u53ef\u767b\u5f55\u67e5\u770b\uff0c\u5728\u8bbe\u7f6e\u91cc\u8fd8\u80fd\u6539\u6210\u4e2d\u6587\u754c\u9762\uff0c\u5f88\u65b9\u4fbf\u3002 \u4f7f\u7528python \u8fde\u63a5mqtt\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u7684\u6a21\u5757\u662fpaho-mqtt,\u4ee3\u7801\u5982\u4e0b # \u4e3a\u4e86\u80fd\u5728\u5916\u90e8\u811a\u672c\u4e2d\u8c03\u7528Django ORM\u6a21\u578b\uff0c\u5fc5\u987b\u914d\u7f6e\u811a\u672c\u73af\u5883\u53d8\u91cf\uff0c\u5c06\u811a\u672c\u6ce8\u518c\u5230Django\u7684\u73af\u5883\u53d8\u91cf\u4e2d import os, sys,json import django import requests # \u7b2c\u4e00\u4e2a\u53c2\u6570\u56fa\u5b9a\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5de5\u7a0b\u540d\u79f0.settings os.environ.setdefault('DJANGO_SETTING_MODULE', 'djangoProject.settings') django.setup() # \u5f15\u5165mqtt\u5305 import paho.mqtt.client as mqtt # \u4f7f\u7528\u72ec\u7acb\u7ebf\u7a0b\u8fd0\u884c from threading import Thread from .app01 import models import time import json from .app01.serializers import AiBingSerializer # \u5efa\u7acbmqtt\u8fde\u63a5 def on_connect(client, userdata, flag, rc): print(\"Connect with the result code \" + str(rc)) client.subscribe('test', qos=0) # \u63a5\u6536\u3001\u5904\u7406mqtt\u6d88\u606f def on_message(client, userdata, msg): out = str(msg.payload.decode('utf-8')) print(out) out = json.loads(out) # \u6536\u5230\u6d88\u606f\u540e\u6267\u884c\u4efb\u52a1 if msg.topic: try: aibing = models.AiBing.objects.get(Code=out,IsDelete=False) print(aibing.IsUerd) if not aibing.IsUerd: res = 1 res2 = json.dumps(res) client.publish('test', payload=res2, qos=1) models.AiBing.objects.filter(Code=out, IsDelete=False).update(IsUerd=True) return else: res = 0 res2 = json.dumps(res) client.publish('test', payload=res2, qos=0) return except: print('\u4e0d\u5b58\u5728') # mqtt\u5ba2\u6237\u7aef\u542f\u52a8\u51fd\u6570 def mqttfunction(): global client # \u4f7f\u7528loop_start \u53ef\u4ee5\u907f\u514d\u963b\u585eDjango\u8fdb\u7a0b\uff0c\u4f7f\u7528loop_forever()\u53ef\u80fd\u4f1a\u963b\u585e\u7cfb\u7edf\u8fdb\u7a0b # client.loop_start() # client.loop_forever() \u6709\u6389\u7ebf\u91cd\u8fde\u529f\u80fd client.loop_forever(retry_first_connection=True) client = mqtt.Client(client_id=\"test\", clean_session=False) # \u542f\u52a8\u51fd\u6570 def mqtt_run(): client.on_connect = on_connect client.on_message = on_message # \u7ed1\u5b9a MQTT \u670d\u52a1\u5668\u5730\u5740 broker = '127.0.0.1' # MQTT\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7 client.connect(broker, 1883, 600) # \u542f\u52a8 mqttthread = Thread(target=mqttfunction) mqttthread.start() # \u542f\u52a8 MQTT # mqtt_run() if __name__ == \"__main__\": mqtt_run() 6 \u6e90\u7801\u89e3\u6790 paho-mqtt \u5305\u542b\u8fd9\u4e9b\u6587\u4ef6 clinet.py matchar.py packetty.py properties.py publish.py reasoncodes.py subscribe.py subscribeoptions.py \u5148\u770bclient\u6587\u4ef6 \u5305\u542b\u4e94\u4e2aobj\u4e94\u4e2afanc obj\uff1aClient\uff0cMQTTMessage,MQTTMessageInfo,WebsocketConnectionError,WebscoketWrapper fanc:_socketpair_compat(),base62(),connack_string(connack_code),error_string,topic_matches_sub() Client\u4e2d\u5e38\u7528\u7684\u65b9\u6cd5\uff1a client.loop:\u9ed8\u8ba4\u65e0\u9650\u963b\u585e\u5faa\u73af\uff0c\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528\u3002\u6210\u529f\u65f6\u8fd4\u56deMQTT_ERR_SUCCESS\u3002\u51fa\u9519\u8fd4\u56de\u503c>0,\u4f1a\u5f15\u53d1\u503c\u9519\u8bef\u3002 \u5177\u6709 QoS>0 \u7684\u6d88\u606f\u3002 Client.loop_forever:\u65e0\u9650\u963b\u585e\u5faa\u73af\uff0c\u5df2\u5728\u7a0b\u5e8f\u4e2d\u5faa\u73af\u8fd0\u884c\u5ba2\u6237\u7aef\uff0c\u9ed8\u8ba4\u4f1a\u91cd\u65b0\u8fde\u63a5\u3002retry_first_connection:\u5982\u679c\u7b2c\u4e00\u6b21\u8fde\u63a5\u5c1d\u8bd5\u5931\u8d25\u65f6\u91cd\u8bd5\u3002 Client.loop_start:\u7ebf\u7a0b\u5ba2\u6237\u7aef\uff0c\u8c03\u7528\u4e00\u6b21\u542f\u52a8\u4e00\u4e2a\u65b0\u7ebf\u7a0b Client.loop_stop:\u4e0e\u4e0a\u5bf9\u5e94\uff0c\u8c03\u7528\u4e00\u6b21\u505c\u6b62start\u542f\u52a8\u7684\u7ebf\u7a0b\u5ba2\u6237\u7aef Client.on_message:\u5ba2\u6237\u7aef\u6536\u5230\u6709\u5173\u4e3b\u9898\u6bcf\u6761\u6d88\u606f\u90fd\u4f1a\u8c03\u7528\uff0c\u7528\u4e8e\u7279\u5b9a\u4e3b\u9898\u8fc7\u6ee4\u5668 Client.publish:\uff08\u53c2\u6570\uff1aself, topic, payload=None, qos=0, retain=False, properties=None\uff09 topic\uff1a\u53d1\u5e03\u6d88\u606f\u7684\u4e3b\u9898 payload\uff1a\u9ed8\u8ba4\u4e3aNone \u5b9e\u9645\u53d1\u5e03\u7684\u6d88\u606f\uff0c\u4e0d\u80fd\u4e3aint\u548cfloat\u7c7b\u578b\uff0c\u5e94\u4e3astr\u7c7b\u578b qos:\u670d\u52a1\u7ea7\u522b retain\uff1a\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u8bbe\u7f6e\u4e3a\u6700\u540e\u4e00\u4e2a\u4fdd\u5b58\u7684\u4e3b\u9898\u6d88\u606f properties\uff1amqtt5.0\u7684\u5c5e\u6027","title":"MQTT"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#mqtt","text":"","title":"MQTT"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#1mq","text":"\u200b M = \u6d88\u606f \u200b Q = \u961f\u5217","title":"1.M&amp;Q"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#2mqtt","text":"","title":"2.MQTT"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#active-mq","text":"\u200b Active MQ = \u4e00\u4e2a\u6d88\u606f\u961f\u5217\u5e94\u7528\u670d\u52a1\u5668\uff08\u63a8\u9001\u670d\u52a1\u5668\uff09 Producer\uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff0c\u8d1f\u8d23\u4ea7\u751f\u548c\u53d1\u9001\u6d88\u606f\u5230 Broker\uff1b Broker\uff1a\u6d88\u606f\u5904\u7406\u4e2d\u5fc3\u3002\u8d1f\u8d23\u6d88\u606f\u5b58\u50a8\u3001\u786e\u8ba4\u3001\u91cd\u8bd5\u7b49\uff0c\u4e00\u822c\u5176\u4e2d\u4f1a\u5305\u542b\u591a\u4e2a queue\uff1b Consumer\uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff0c\u8d1f\u8d23\u4ece Broker \u4e2d\u83b7\u53d6\u6d88\u606f\uff0c\u5e76\u8fdb\u884c\u76f8\u5e94\u5904\u7406\uff1b ActiveMQ\u80fd\u505a\u4ec0\u4e48 1.\u5b9e\u73b0\u4e24\u4e2a\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u7684\u901a\u8baf 2.\u5b9e\u73b0\u540c\u4e00\u4e2a\u5e94\u7528\uff0c\u4e0d\u540c\u6a21\u5757\u4e4b\u95f4\u7684\u6d88\u606f\u901a\u8baf ActiveMQ\u7279\u70b9 1.\u652f\u6301\u591a\u8bed\u8a00\uff08Java,C,C++,C#,Ruby,Perl,Python,PHP\uff09\u591a\u534f\u8bae\u5ba2\u6237\u7aef\uff08OpenWire, Stomp REST, WS Notification, XMPP, AMQP\uff09 2.\u5bf9Spring\u7684\u652f\u6301\uff0cActiveMQ\u53ef\u4ee5\u5f88\u5bb9\u6613\u6574\u5408\u5230Spring\u7684\u7cfb\u7edf\u91cc\u9762\u53bb\u3002 3.\u652f\u6301\u9ad8\u53ef\u7528\u3001\u9ad8\u6027\u80fd\u7684\u96c6\u7fa4\u6a21\u5f0f\u3002","title":"Active MQ"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#zeno-mq","text":"ZMQ\u7b80\u4ecb\uff1aZMQ\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u5d4c\u5165\u5f0f\u7f51\u7edc\u8fde\u63a5\u5e93\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5e76\u53d1\u6846\u67b6\u3002\u6846\u67b6\u63d0\u4f9b\u7684\u5957\u63a5\u5b57\u53ef\u4ee5\u6ee1\u8db3\u5728\u591a\u79cd\u534f\u8bae\u4e4b\u95f4\u4f20\u8f93\u539f\u5b50\u4fe1\u606f\uff0c\u5982\u7ebf\u7a0b\u95f4\u3001\u8fdb\u7a0b\u95f4\u3001TCP\u3001\u5e7f\u64ad\u7b49\u3002\u53ef\u4ee5\u4f7f\u7528ZMQ\u6784\u5efa\u591a\u5bf9\u591a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u5982\u6247\u51fa\u3001\u53d1\u5e03-\u8ba2\u9605\u3001\u4efb\u52a1\u5206\u53d1\u3001\u8bf7\u6c42-\u5e94\u7b54\u7b49\u3002ZMQ\u7684\u9ad8\u901f\u4f7f\u5f97\u5b83\u80fd\u80dc\u4efb\u5206\u5e03\u5f0f\u5e94\u7528\u3002\u5b83\u7684\u5f02\u6b65I/O\u673a\u5236\u8ba9\u4f60\u80fd\u591f\u6784\u5efa\u591a\u6838\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b8c\u6210\u5f02\u6b65\u6d88\u606f\u5904\u7406\u4efb\u52a1\u3002ZMQ\u6709\u7740\u591a\u8bed\u8a00\u652f\u6301\uff0c\u5e76\u80fd\u5728\u51e0\u4e4e\u6240\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 \u200b \u4e09\u79cd\u57fa\u672c\u6a21\u578b \u200b Request-Reply\uff08\u8bf7\u6c42-\u56de\u590d\uff09\u8bf7\u6c42\u5e94\u7b54\u6a21\u5f0f \u200b \u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u7b49\u5f85\u670d\u52a1\u7aef\u56de\u5e94\u8bf7\u6c42\u3002\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u7b80\u5355\u7684 \u201cHello\u201d\uff0c\u670d\u52a1\u7aef\u5219\u56de\u5e94\u4e00\u4e2a \u201cWorld\u201d\u3002\u53ef\u4ee5\u6709 N \u4e2a\u5ba2\u6237\u7aef\uff0c\u4e00\u4e2a\u670d\u52a1\u7aef\uff0c\u56e0\u6b64\u662f 1-N \u8fde\u63a5\u3002 \u200b \u200b Publish-Subscribe \u53d1\u5e03-\u8ba2\u9605\u6a21\u5f0f \u200b \u4e00\u4e2a\u5929\u6c14\u9884\u62a5\u7684\u4f8b\u5b50\u6765\u4ecb\u7ecd\u8be5\u6a21\u5f0f\u3002\u670d\u52a1\u7aef\u4e0d\u65ad\u5730\u66f4\u65b0\u5404\u4e2a\u57ce\u5e02\u7684\u5929\u6c14\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8ba2\u9605\u81ea\u5df1\u611f\u5174\u8da3\uff08\u901a\u8fc7\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff09\u7684\u57ce\u5e02\u7684\u5929\u6c14\u4fe1\u606f\u3002 \u200b \u200b Parallel Pipeline \u5206\u5e03\u5f0f\u5904\u7406 \u4efb\u52a1\u5206\u53d1\u5668\u4f1a\u751f\u6210\u5927\u91cf\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\u7684\u4efb\u52a1\uff1b \u6709\u4e00\u7ec4worker\u4f1a\u5904\u7406\u8fd9\u4e9b\u4efb\u52a1\uff1b \u7ed3\u679c\u6536\u96c6\u5668\u4f1a\u5728\u672b\u7aef\u63a5\u6536\u6240\u6709worker\u7684\u5904\u7406\u7ed3\u679c\uff0c\u8fdb\u884c\u6c47\u603b\u3002","title":"Zeno MQ"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#mqtt_1","text":"MQTT\uff08Message Queuing Telemetry Transport\uff0c\u6d88\u606f\u961f\u5217\u9065\u6d4b\u4f20\u8f93\u534f\u8bae\uff09\uff0c\u662f\u4e00\u79cd\u57fa\u4e8e\u53d1\u5e03/\u8ba2\u9605\uff08publish/subscribe\uff09\u6a21\u5f0f\u7684\u201c\u8f7b\u91cf\u7ea7\u201d\u901a\u8baf\u534f\u8bae\uff0c\u8be5\u534f\u8bae\u6784\u5efa\u4e8eTCP/IP\u534f\u8bae\u4e0a\uff0c\u7531IBM\u57281999\u5e74\u53d1\u5e03\u3002 MQTT\u6700\u5927\u4f18\u70b9\u5728\u4e8e\uff0c\u7528\u6781\u5c11\u7684\u4ee3\u7801\u548c\u6709\u9650\u7684\u5e26\u5bbd\uff0c\u4e3a\u8fde\u63a5\u8fdc\u7a0b\u8bbe\u5907\u63d0\u4f9b\u5b9e\u65f6\u53ef\u9760\u7684\u6d88\u606f\u670d\u52a1\u3002 \u4f5c\u4e3a\u4e00\u79cd\u4f4e\u5f00\u9500\u3001\u4f4e\u5e26\u5bbd\u5360\u7528\u7684\u5373\u65f6\u901a\u8baf\u534f\u8bae\uff0c\u4f7f\u5176\u5728\u7269\u8054\u7f51\u3001\u5c0f\u578b\u8bbe\u5907\u3001\u79fb\u52a8\u5e94\u7528\u7b49\u65b9\u9762\u6709\u8f83\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 MQTT\u534f\u8bae\u7279\u70b9 MQTT\u662f\u4e00\u4e2a\u57fa\u4e8e\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u7684\u6d88\u606f\u53d1\u5e03/\u8ba2\u9605\u4f20\u8f93\u534f\u8bae\u3002 MQTT\u534f\u8bae\u662f\u8f7b\u91cf\u3001\u7b80\u5355\u3001\u5f00\u653e\u548c\u6613\u4e8e\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u7279\u70b9\u4f7f\u5b83\u9002\u7528\u8303\u56f4\u975e\u5e38\u5e7f\u6cdb\u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5305\u62ec\u53d7\u9650\u7684\u73af\u5883\u4e2d\uff0c\u5982\uff1a\u673a\u5668\u4e0e\u673a\u5668\uff08M2M\uff09\u901a\u4fe1\u548c\u7269\u8054\u7f51\uff08IoT\uff09\u3002 MQTT \u4e0e HTTP \u4e00\u6837\uff0cMQTT \u8fd0\u884c\u5728\u4f20\u8f93\u63a7\u5236\u534f\u8bae/\u4e92\u8054\u7f51\u534f\u8bae (TCP/IP) \u5806\u6808\u4e4b\u4e0a\u3002 MQTT\u4f7f\u7528\u7684\u53d1\u5e03/\u8ba2\u9605\u6d88\u606f\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u5bf9\u591a\u7684\u6d88\u606f\u5206\u53d1\u673a\u5236\uff0c\u4ece\u800c\u5b9e\u73b0\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u89e3\u8026\u3002\u8fd9\u662f\u4e00\u79cd\u6d88\u606f\u4f20\u9012\u6a21\u5f0f\uff0c\u6d88\u606f\u4e0d\u662f\u76f4\u63a5\u4ece\u53d1\u9001\u5668\u53d1\u9001\u5230\u63a5\u6536\u5668\uff08\u5373\u70b9\u5bf9\u70b9\uff09\uff0c\u800c\u662f\u7531MQTT server\uff08\u6216\u79f0\u4e3a MQTT Broker\uff09\u5206\u53d1\u7684\u3002 MQTT \u670d\u52a1\u5668\u662f\u53d1\u5e03-\u8ba2\u9605\u67b6\u6784\u7684\u6838\u5fc3\u3002 QoS\uff08Quality of Service levels\uff09 QoS 0 \u8fd9\u4e00\u7ea7\u522b\u4f1a\u53d1\u751f\u6d88\u606f\u4e22\u5931\u6216\u91cd\u590d\uff0c\u6d88\u606f\u53d1\u5e03\u4f9d\u8d56\u4e8e\u5e95\u5c42TCP/IP\u7f51\u7edc\u3002\u5373\uff1a<=1 QoS 1 \u627f\u8bfa\u6d88\u606f\u5c06\u81f3\u5c11\u4f20\u9001\u4e00\u6b21\u7ed9\u8ba2\u9605\u8005\u3002 QoS 2 \u4f7f\u7528 QoS 2\uff0c\u6211\u4eec\u4fdd\u8bc1\u6d88\u606f\u4ec5\u4f20\u9001\u5230\u76ee\u7684\u5730\u4e00\u6b21\u3002\u4e3a\u6b64\uff0c\u5e26\u6709\u552f\u4e00\u6d88\u606f ID \u7684\u6d88\u606f\u4f1a\u5b58\u50a8\u4e24\u6b21\uff0c\u9996\u5148\u6765\u81ea\u53d1\u9001\u8005\uff0c\u7136\u540e\u662f\u63a5\u6536\u8005\u3002QoS \u7ea7\u522b 2 \u5728\u7f51\u7edc\u4e2d\u5177\u6709\u6700\u9ad8\u7684\u5f00\u9500\uff0c\u56e0\u4e3a\u5728\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u9700\u8981\u4e24\u4e2a\u6d41\u3002 MQTT \u6570\u636e\u5305\u7ed3\u6784 \u56fa\u5b9a\u5934\uff08Fixed header\uff09\uff0c\u5b58\u5728\u4e8e\u6240\u6709MQTT\u6570\u636e\u5305\u4e2d\uff0c\u8868\u793a\u6570\u636e\u5305\u7c7b\u578b\u53ca\u6570\u636e\u5305\u7684\u5206\u7ec4\u7c7b\u6807\u8bc6\uff1b \u53ef\u53d8\u5934\uff08Variable header\uff09\uff0c\u5b58\u5728\u4e8e\u90e8\u5206MQTT\u6570\u636e\u5305\u4e2d\uff0c\u6570\u636e\u5305\u7c7b\u578b\u51b3\u5b9a\u4e86\u53ef\u53d8\u5934\u662f\u5426\u5b58\u5728\u53ca\u5176\u5177\u4f53\u5185\u5bb9\uff1b \u6d88\u606f\u4f53\uff08Payload\uff09\uff0c\u5b58\u5728\u4e8e\u90e8\u5206MQTT\u6570\u636e\u5305\u4e2d\uff0c\u8868\u793a\u5ba2\u6237\u7aef\u6536\u5230\u7684\u5177\u4f53\u5185\u5bb9\uff1b \u534f\u8bae\u7248\u672c3\u5b9a\u4e49\u4e8614\u79cd MQTT \u62a5\u6587\uff0c\u7528\u4e8e\u5efa\u7acb/\u65ad\u5f00\u8fde\u63a5\u3001\u53d1\u5e03\u6d88\u606f\u3001\u8ba2\u9605\u6d88\u606f\u548c\u7ef4\u62a4\u8fde\u63a5\u3002\u56fa\u5b9a\u62a5\u5934\u7684\u7b2c\u4e00\u5b57\u8282\u76844-7\u4f4d\u7684\u503c\u6307\u5b9a\u4e86\u62a5\u6587\u7c7b\u578b\uff0c\u5176\u53d6\u503c\u5982\u4e0b\u8868\u3002 \u62a5\u6587\u7c7b\u578b \u503c \u63cf\u8ff0 CONNECT 1 \u5ba2\u6237\u7aef\u5411\u4ee3\u7406\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42 CONNACK 2 \u8fde\u63a5\u786e\u8ba4 PUBLISH 3 \u53d1\u5e03\u6d88\u606f PUBACK 4 \u53d1\u5e03\u786e\u8ba4 PUBREC 5 \u53d1\u5e03\u6536\u5230\uff08QoS2\uff09 PUBREL 6 \u53d1\u5e03\u91ca\u653e\uff08QoS2\uff09 PUBCOMP 7 \u53d1\u5e03\u5b8c\u6210\uff08QoS2\uff09 SUBSCRIBE 8 \u5ba2\u6237\u7aef\u5411\u4ee3\u7406\u53d1\u8d77\u8ba2\u9605\u8bf7\u6c42 SUBACK 9 \u8ba2\u9605\u786e\u8ba4 UNSUBSCRIBE 10 \u53d6\u6d88\u8ba2\u9605 UNSUBACK 11 \u53d6\u6d88\u8ba2\u9605\u786e\u8ba4 PINGREQ 12 PING\u8bf7\u6c42 PINGRESP 13 PING\u54cd\u5e94 DISCONNECT 14 \u65ad\u5f00\u8fde\u63a5","title":"MQTT"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#3mqtt","text":"","title":"3.MQTT\u6a21\u578b"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#4python-mqtt","text":"\u76ee\u524d\u4f7f\u7528\u7684\u662femqx \u52a0 paho.mqtt emqx\u5b98\u7f51\uff1ahttps://www.emqx.io/zh/downloads#broker \u7528emqx\u5728windows\u4e0a\u5efa\u7acb\u670d\u52a1\u5668\uff0c\u5148\u4e0b\u8f7d\u9002\u5408\u7684\u5b89\u88c5\u5305\uff0c\u89e3\u538b\u540e\u8fdb\u5165bin\u76ee\u5f55\uff0c\u5728cmd\u4e2d\u4f7f\u7528\u547d\u4ee4 emqx.cmd start\u542f\u52a8\u670d\u52a1\u5668\uff0c\u5173\u95ed\u670d\u52a1\u5668\u7684\u547d\u4ee4\u662femqx.cmd stop\u3002 \u542f\u52a8\u670d\u52a1\u5668\u540e\uff0c\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:18083 \uff0c\u4f7f\u7528\u9ed8\u8ba4\u7ba1\u7406\u8d26\u53f7 admin/public \u5373\u53ef\u767b\u5f55\u67e5\u770b\uff0c\u5728\u8bbe\u7f6e\u91cc\u8fd8\u80fd\u6539\u6210\u4e2d\u6587\u754c\u9762\uff0c\u5f88\u65b9\u4fbf\u3002 \u4f7f\u7528python \u8fde\u63a5mqtt\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u7684\u6a21\u5757\u662fpaho-mqtt,\u4ee3\u7801\u5982\u4e0b # \u4e3a\u4e86\u80fd\u5728\u5916\u90e8\u811a\u672c\u4e2d\u8c03\u7528Django ORM\u6a21\u578b\uff0c\u5fc5\u987b\u914d\u7f6e\u811a\u672c\u73af\u5883\u53d8\u91cf\uff0c\u5c06\u811a\u672c\u6ce8\u518c\u5230Django\u7684\u73af\u5883\u53d8\u91cf\u4e2d import os, sys,json import django import requests # \u7b2c\u4e00\u4e2a\u53c2\u6570\u56fa\u5b9a\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5de5\u7a0b\u540d\u79f0.settings os.environ.setdefault('DJANGO_SETTING_MODULE', 'djangoProject.settings') django.setup() # \u5f15\u5165mqtt\u5305 import paho.mqtt.client as mqtt # \u4f7f\u7528\u72ec\u7acb\u7ebf\u7a0b\u8fd0\u884c from threading import Thread from .app01 import models import time import json from .app01.serializers import AiBingSerializer # \u5efa\u7acbmqtt\u8fde\u63a5 def on_connect(client, userdata, flag, rc): print(\"Connect with the result code \" + str(rc)) client.subscribe('test', qos=0) # \u63a5\u6536\u3001\u5904\u7406mqtt\u6d88\u606f def on_message(client, userdata, msg): out = str(msg.payload.decode('utf-8')) print(out) out = json.loads(out) # \u6536\u5230\u6d88\u606f\u540e\u6267\u884c\u4efb\u52a1 if msg.topic: try: aibing = models.AiBing.objects.get(Code=out,IsDelete=False) print(aibing.IsUerd) if not aibing.IsUerd: res = 1 res2 = json.dumps(res) client.publish('test', payload=res2, qos=1) models.AiBing.objects.filter(Code=out, IsDelete=False).update(IsUerd=True) return else: res = 0 res2 = json.dumps(res) client.publish('test', payload=res2, qos=0) return except: print('\u4e0d\u5b58\u5728') # mqtt\u5ba2\u6237\u7aef\u542f\u52a8\u51fd\u6570 def mqttfunction(): global client # \u4f7f\u7528loop_start \u53ef\u4ee5\u907f\u514d\u963b\u585eDjango\u8fdb\u7a0b\uff0c\u4f7f\u7528loop_forever()\u53ef\u80fd\u4f1a\u963b\u585e\u7cfb\u7edf\u8fdb\u7a0b # client.loop_start() # client.loop_forever() \u6709\u6389\u7ebf\u91cd\u8fde\u529f\u80fd client.loop_forever(retry_first_connection=True) client = mqtt.Client(client_id=\"test\", clean_session=False) # \u542f\u52a8\u51fd\u6570 def mqtt_run(): client.on_connect = on_connect client.on_message = on_message # \u7ed1\u5b9a MQTT \u670d\u52a1\u5668\u5730\u5740 broker = '127.0.0.1' # MQTT\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7 client.connect(broker, 1883, 600) # \u542f\u52a8 mqttthread = Thread(target=mqttfunction) mqttthread.start() # \u542f\u52a8 MQTT # mqtt_run() if __name__ == \"__main__\": mqtt_run()","title":"4.python MQTT\u4f7f\u7528"},{"location":"%E5%AE%8B%E6%B5%A9/MQTT/#6","text":"paho-mqtt \u5305\u542b\u8fd9\u4e9b\u6587\u4ef6 clinet.py matchar.py packetty.py properties.py publish.py reasoncodes.py subscribe.py subscribeoptions.py \u5148\u770bclient\u6587\u4ef6 \u5305\u542b\u4e94\u4e2aobj\u4e94\u4e2afanc obj\uff1aClient\uff0cMQTTMessage,MQTTMessageInfo,WebsocketConnectionError,WebscoketWrapper fanc:_socketpair_compat(),base62(),connack_string(connack_code),error_string,topic_matches_sub() Client\u4e2d\u5e38\u7528\u7684\u65b9\u6cd5\uff1a client.loop:\u9ed8\u8ba4\u65e0\u9650\u963b\u585e\u5faa\u73af\uff0c\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528\u3002\u6210\u529f\u65f6\u8fd4\u56deMQTT_ERR_SUCCESS\u3002\u51fa\u9519\u8fd4\u56de\u503c>0,\u4f1a\u5f15\u53d1\u503c\u9519\u8bef\u3002 \u5177\u6709 QoS>0 \u7684\u6d88\u606f\u3002 Client.loop_forever:\u65e0\u9650\u963b\u585e\u5faa\u73af\uff0c\u5df2\u5728\u7a0b\u5e8f\u4e2d\u5faa\u73af\u8fd0\u884c\u5ba2\u6237\u7aef\uff0c\u9ed8\u8ba4\u4f1a\u91cd\u65b0\u8fde\u63a5\u3002retry_first_connection:\u5982\u679c\u7b2c\u4e00\u6b21\u8fde\u63a5\u5c1d\u8bd5\u5931\u8d25\u65f6\u91cd\u8bd5\u3002 Client.loop_start:\u7ebf\u7a0b\u5ba2\u6237\u7aef\uff0c\u8c03\u7528\u4e00\u6b21\u542f\u52a8\u4e00\u4e2a\u65b0\u7ebf\u7a0b Client.loop_stop:\u4e0e\u4e0a\u5bf9\u5e94\uff0c\u8c03\u7528\u4e00\u6b21\u505c\u6b62start\u542f\u52a8\u7684\u7ebf\u7a0b\u5ba2\u6237\u7aef Client.on_message:\u5ba2\u6237\u7aef\u6536\u5230\u6709\u5173\u4e3b\u9898\u6bcf\u6761\u6d88\u606f\u90fd\u4f1a\u8c03\u7528\uff0c\u7528\u4e8e\u7279\u5b9a\u4e3b\u9898\u8fc7\u6ee4\u5668 Client.publish:\uff08\u53c2\u6570\uff1aself, topic, payload=None, qos=0, retain=False, properties=None\uff09 topic\uff1a\u53d1\u5e03\u6d88\u606f\u7684\u4e3b\u9898 payload\uff1a\u9ed8\u8ba4\u4e3aNone \u5b9e\u9645\u53d1\u5e03\u7684\u6d88\u606f\uff0c\u4e0d\u80fd\u4e3aint\u548cfloat\u7c7b\u578b\uff0c\u5e94\u4e3astr\u7c7b\u578b qos:\u670d\u52a1\u7ea7\u522b retain\uff1a\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u8bbe\u7f6e\u4e3a\u6700\u540e\u4e00\u4e2a\u4fdd\u5b58\u7684\u4e3b\u9898\u6d88\u606f properties\uff1amqtt5.0\u7684\u5c5e\u6027","title":"6 \u6e90\u7801\u89e3\u6790"}]}